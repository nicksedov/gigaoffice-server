openapi: 3.0.3
info:
  title: GigaOffice API
  description: |
    API for GigaOffice spreadsheet processing with AI capabilities.
    
    Промежуточный сервер для интеграции плагинов Р7-Офис с AI-моделью GigaChat.
    • Хранит заявки и метаданные в PostgreSQL  
    • Обменивается заданиями и ответами через Kafka (топики *gigaoffice-requests*, *gigaoffice-responses*, *gigaoffice-dlq*)
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://omv-gigaoffice.ydns.eu
    description: Production

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Health schemas
    PingResponse:
      type: object
      properties:
        status:
          type: string
          example: pong
      description: Simple ping response to check if the service is alive

    ServiceHealth:
      type: object
      properties:
        status:
          type: string
          default: ok
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          default: 1.0.0
        uptime:
          type: number
          format: float
        database:
          type: boolean
          default: true
        gigachat:
          type: boolean
          default: true
        kafka:
          type: boolean
          default: true
        active_requests:
          type: integer
          default: 0
        queue_size:
          type: integer
          default: 0
        memory_usage:
          type: number
          format: float
          default: 0.0
        cpu_usage:
          type: number
          format: float
          default: 0.0
      description: Detailed service health information including database, GigaChat, and Kafka status

    # AI Feedback schemas
    AIFeedbackCreate:
      type: object
      required:
        - ai_request_id
        - text_response
      properties:
        ai_request_id:
          type: string
        text_response:
          type: string
        rating:
          type: boolean
          nullable: true
        comment:
          type: string
          nullable: true
      description: Model for creating AI feedback

    AIFeedbackOut:
      type: object
      properties:
        id:
          type: integer
        ai_request_id:
          type: string
          format: uuid
        text_response:
          type: string
        rating:
          type: boolean
          nullable: true
        comment:
          type: string
          nullable: true
      description: Model for AI feedback output

    # Prompt schemas
    PromptCategoriesResponse:
      type: object
      properties:
        status:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryInfo'
      description: Response for prompt categories

    CategoryInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        sort_order:
          type: integer
        prompt_count:
          type: integer
      description: Information about a prompt category

    CategoryDetailsResponse:
      type: object
      properties:
        status:
          type: string
        category:
          $ref: '#/components/schemas/CategoryInfo'
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/PromptInfo'
      description: Detailed category information

    PromptInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        template:
          type: string
        category_id:
          type: integer
      description: Information about a prompt

    PresetPromptsResponse:
      type: object
      properties:
        status:
          type: string
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/PresetPromptInfo'
      description: Response for preset prompts

    PresetPromptInfo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        template:
          type: string
        category_id:
          type: integer
        category_name:
          type: string
          nullable: true
        category_display_name:
          type: string
          nullable: true
      description: Information about a preset prompt

    PromptClassificationRequest:
      type: object
      required:
        - prompt_text
      properties:
        prompt_text:
          type: string
          minLength: 1
        include_descriptions:
          type: boolean
          default: false
      description: Request for prompt classification

    PromptClassificationResponse:
      type: object
      properties:
        success:
          type: boolean
        query_text:
          type: string
        category:
          type: string
        confidence:
          type: number
          format: float
      description: Response for prompt classification

    # Metrics schemas
    MetricsResponse:
      type: object
      properties:
        period:
          type: string
          enum: [hour, day, week, month]
        total_requests:
          type: integer
        successful_requests:
          type: integer
        failed_requests:
          type: integer
        avg_processing_time:
          type: number
          format: float
        total_tokens_used:
          type: integer
      description: Response for service metrics

    # Spreadsheet schemas
    SpreadsheetMetadata:
      type: object
      properties:
        version:
          type: string
          default: "1.0"
          example: "1.0"
        created_at:
          type: string
          format: date-time
        plugin_id:
          type: string
          nullable: true
      description: Metadata for the enhanced spreadsheet data format

    WorksheetInfo:
      type: object
      properties:
        name:
          type: string
          default: "Sheet1"
          description: Name of the worksheet where source data is located
        range:
          type: string
          default: "A1"
          description: Сell range reference for source data
      description: Worksheet information

    CellStyle:
      type: object
      properties:
        background_color:
          type: string
          nullable: true
          description: Background color in hex format
        font_color:
          type: string
          nullable: true
          description: Font color in hex format
        font_weight:
          type: string
          nullable: true
          description: Font weight (normal, bold)
        font_size:
          type: integer
          nullable: true
          description: Font size in points
        font_style:
          type: string
          nullable: true
          description: Font style (normal, italic)
        horizontal_alignment:
          type: string
          nullable: true
          description: Horizontal alignment (left, center, right)
        vertical_alignment:
          type: string
          nullable: true
          description: Vertical alignment (top, middle, bottom)
        border:
          type: array
          nullable: true
          items:
            type: string
          description: Border settings (top, right, bottom, left)
      description: Unified styling for all spreadsheet cells

    HeaderData:
      type: object
      required:
        - values
      properties:
        values:
          type: array
          items:
            type: string
        style:
          $ref: '#/components/schemas/CellStyle'
      description: Header row definition

    DataRow:
      type: object
      required:
        - values
      properties:
        values:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer
              - type: number
              - type: boolean
        style:
          $ref: '#/components/schemas/CellStyle'
      description: Data row definition

    WorksheetData:
      type: object
      required:
        - rows
      properties:
        header:
          $ref: '#/components/schemas/HeaderData'
          description: Header row data
        rows:
          type: array
          items:
            $ref: '#/components/schemas/DataRow'
          description: Data rows
      description: Worksheet data structure

    ColumnDefinition:
      type: object
      required:
        - index
        - format
      properties:
        index:
          type: integer
          description: Zero-based column index
        format:
          type: string
          description: Display format for the data
      description: Column definition with type and formatting

    ChartPosition:
      type: object
      required:
        - top
        - left
        - width
        - height
      properties:
        top:
          type: integer
          description: Top position in pixels
        left:
          type: integer
          description: Left position in pixels
        width:
          type: integer
          description: Width in pixels
        height:
          type: integer
          description: Height in pixels
      description: Position and size specifications for charts

    ChartStyle:
      type: object
      properties:
        color_scheme:
          type: string
          default: office
          description: Color scheme for the chart
      description: Chart styling options

    ChartDefinition:
      type: object
      required:
        - type
        - title
        - range
        - position
      properties:
        type:
          type: string
          description: Chart type (column, line, pie, etc.)
        title:
          type: string
          description: Chart title
        range:
          type: string
          description: Data range for the chart
        position:
          $ref: '#/components/schemas/ChartPosition'
          description: Position and size specifications
        style:
          $ref: '#/components/schemas/ChartStyle'
          description: Chart styling options
      description: Chart definition

    SpreadsheetData:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/SpreadsheetMetadata'
          description: Metadata section
        worksheet:
          $ref: '#/components/schemas/WorksheetInfo'
          description: Worksheet section
        data:
          $ref: '#/components/schemas/WorksheetData'
          description: Data section containing header and rows
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ColumnDefinition'
          nullable: true
          description: Column definitions
        charts:
          type: array
          items:
            $ref: '#/components/schemas/ChartDefinition'
          nullable: true
          description: Chart definitions
      description: Main data structure for enhanced spreadsheet manipulation

    SpreadsheetRequest:
      type: object
      required:
        - spreadsheet_data
        - query_text
      properties:
        spreadsheet_data:
          $ref: '#/components/schemas/SpreadsheetData'
        query_text:
          type: string
        category:
          type: string
          nullable: true
      description: Request model for enhanced spreadsheet processing

    SpreadsheetProcessResponse:
      type: object
      required:
        - success
        - request_id
        - status
        - message
      properties:
        success:
          type: boolean
        request_id:
          type: string
        status:
          type: string
        message:
          type: string
        error_message:
          type: string
          nullable: true
      description: Response model for initiating spreadsheet processing (without result data)

    SpreadsheetResultResponse:
      type: object
      required:
        - success
        - status
        - message
      properties:
        success:
          type: boolean
        status:
          type: string
        message:
          type: string
        result:
          $ref: '#/components/schemas/SpreadsheetData'
        tokens_used:
          type: integer
          nullable: true
        processing_time:
          type: number
          format: float
          nullable: true
      description: Response model for spreadsheet processing result

    SpreadsheetSearchRequest:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
      description: Request model for spreadsheet data search

    SearchResultItem:
      type: object
      required:
        - text
        - language
        - score
      properties:
        text:
          type: string
          description: Matched text from the database
        language:
          type: string
          description: Language of the matched text
        score:
          type: number
          format: float
          description: Similarity score (0-1, where 1 is most similar)
      description: Search result item with text, language and similarity score

    SearchResult:
      type: object
      required:
        - search_text
        - search_results
      properties:
        search_text:
          type: string
          description: Search prompt text
        search_results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultItem'
          description: Search result items
      description: Search result

paths:
  /api/ping:
    get:
      tags:
        - Health
      summary: Simple ping endpoint
      description: |
        Простой health-check endpoint для проверки работоспособности API.
        
        Returns a simple pong response to check if the service is alive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
              example:
                status: pong

  /api/health:
    get:
      tags:
        - Health
      summary: Detailed service health check
      description: |
        Возвращает детальную информацию о состоянии всех компонентов сервиса.
        
        Returns detailed information about the service health including database, GigaChat, and Kafka status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
              example:
                status: ok
                timestamp: "2023-01-01T00:00:00Z"
                version: "1.0.0"
                uptime: 3600.5
                database: true
                gigachat: true
                kafka: true
                active_requests: 5
                queue_size: 2
                memory_usage: 45.2
                cpu_usage: 12.5

  /api/feedback:
    post:
      tags:
        - AI Feedback Processing
      summary: Submit AI feedback
      description: Submit feedback for an AI request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIFeedbackCreate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIFeedbackOut'
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /api/prompts/categories:
    get:
      tags:
        - Prompts
      summary: Get prompt categories
      description: Получение списка категорий предустановленных промптов с описанием
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptCategoriesResponse'
        '500':
          description: Internal server error

  /api/prompts/categories/{category_id}:
    get:
      tags:
        - Prompts
      summary: Get category details
      description: Получение подробной информации о категории
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailsResponse'
        '404':
          description: Category not found
        '500':
          description: Internal server error

  /api/prompts/presets:
    get:
      tags:
        - Prompts
      summary: Get preset prompts
      description: Получение предустановленных промптов
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresetPromptsResponse'
        '500':
          description: Internal server error

  /api/prompts/classify:
    post:
      tags:
        - Prompts
      summary: Classify a prompt
      description: Классифицирует пользовательский промпт по предопределенным категориям
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptClassificationRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptClassificationResponse'
        '401':
          description: Unauthorized
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /api/metrics:
    get:
      tags:
        - Metrics
      summary: Get service metrics
      description: Получение метрик сервиса
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: false
          schema:
            type: string
            default: day
            enum: [hour, day, week, month]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Access denied
        '500':
          description: Internal server error

  /api/spreadsheets/process:
    post:
      tags:
        - Spreadsheet Processing
      summary: Process enhanced spreadsheet data
      description: |
        Обработка расширенных данных таблицы.
        
        Process enhanced spreadsheet data with AI
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpreadsheetRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpreadsheetProcessResponse'
        '401':
          description: Unauthorized
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /api/spreadsheets/status/{request_id}:
    get:
      tags:
        - Spreadsheet Processing
      summary: Get processing status
      description: |
        Получение статуса обработки расширенных данных таблицы.
        
        Get the processing status of a spreadsheet request
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpreadsheetProcessResponse'
        '404':
          description: Request not found
        '500':
          description: Internal server error

  /api/spreadsheets/result/{request_id}:
    get:
      tags:
        - Spreadsheet Processing
      summary: Get processing result
      description: |
        Получение результата обработки расширенных данных таблицы.
        
        Get the result of a spreadsheet processing request
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpreadsheetResultResponse'
        '404':
          description: Request not found
        '500':
          description: Internal server error

  /api/spreadsheets/data/search:
    post:
      tags:
        - Spreadsheet Processing
      summary: Search spreadsheet data
      description: |
        Performs semantic search on spreadsheet headers using vector embeddings to find the most similar matches. Currently only supports searching in the "header" domain.
      security:
        - bearerAuth: []
      parameters:
        - name: domain
          in: query
          required: true
          description: Domain area for search. Currently only supports 'header'
          schema:
            type: string
        - name: limit
          in: query
          required: true
          description: Number of most relevant results to return per search string
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpreadsheetSearchRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
        '400':
          description: Invalid domain parameter
        '401':
          description: Unauthorized
        '422':
          description: Validation error
        '500':
          description: Internal server error